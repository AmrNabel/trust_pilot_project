"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/firestore.ts":
/*!**************************!*\
  !*** ./lib/firestore.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReview: function() { return /* binding */ createReview; },\n/* harmony export */   createService: function() { return /* binding */ createService; },\n/* harmony export */   getPendingReviews: function() { return /* binding */ getPendingReviews; },\n/* harmony export */   getPendingServices: function() { return /* binding */ getPendingServices; },\n/* harmony export */   getReviewsByServiceId: function() { return /* binding */ getReviewsByServiceId; },\n/* harmony export */   getServiceById: function() { return /* binding */ getServiceById; },\n/* harmony export */   getServices: function() { return /* binding */ getServices; },\n/* harmony export */   searchServices: function() { return /* binding */ searchServices; },\n/* harmony export */   updateReviewStatus: function() { return /* binding */ updateReviewStatus; },\n/* harmony export */   updateServiceRating: function() { return /* binding */ updateServiceRating; },\n/* harmony export */   updateServiceStatus: function() { return /* binding */ updateServiceStatus; }\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/storage */ \"(app-pages-browser)/./node_modules/firebase/storage/dist/esm/index.esm.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./lib/firebase.ts\");\n\n\n\n\n// Get all services\nconst getServices = async function() {\n    let includePending = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    const servicesCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\");\n    const constraints = [];\n    if (!includePending) {\n        // Only get approved services by default\n        constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", false));\n    }\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(servicesCollection, ...constraints, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"name\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n// Get service by ID\nconst getServiceById = async (id)=>{\n    const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\", id);\n    const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n    if (docSnap.exists()) {\n        return {\n            id: docSnap.id,\n            ...docSnap.data()\n        };\n    }\n    return null;\n};\n// Get reviews for a service\nconst getReviewsByServiceId = async function(serviceId) {\n    let showPending = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const reviewsCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\");\n    // Only show approved reviews unless showPending is true\n    const constraints = [\n        (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"serviceId\", \"==\", serviceId)\n    ];\n    if (!showPending) {\n        constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", false));\n    }\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(reviewsCollection, ...constraints, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n// Get all pending reviews (for admin)\nconst getPendingReviews = async ()=>{\n    const reviewsCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\");\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(reviewsCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", true), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n// Create a new review\nconst createReview = async (review, imageFile)=>{\n    // Prepare review data\n    const reviewData = {\n        ...review,\n        pending: true,\n        createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n    };\n    // Upload image if provided\n    if (imageFile) {\n        const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_firebase__WEBPACK_IMPORTED_MODULE_2__.storage, \"reviews/\".concat((0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()));\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(imageRef, imageFile);\n        reviewData.imageUrl = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(imageRef);\n    }\n    // Add review to Firestore\n    const reviewRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\"), reviewData);\n    return reviewRef.id;\n};\n// Approve or reject a review\nconst updateReviewStatus = async (reviewId, approve)=>{\n    const reviewRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\", reviewId);\n    const reviewSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(reviewRef);\n    if (!reviewSnap.exists()) {\n        throw new Error(\"Review does not exist\");\n    }\n    const review = reviewSnap.data();\n    if (approve) {\n        // Approve the review\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(reviewRef, {\n            pending: false\n        });\n        // Update service rating\n        await updateServiceRating(review.serviceId);\n    } else {\n        // Delete the review if not approved\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(reviewRef);\n    }\n};\n// Update service rating based on approved reviews\nconst updateServiceRating = async (serviceId)=>{\n    const approvedReviews = await getReviewsByServiceId(serviceId);\n    if (approvedReviews.length === 0) return;\n    // Calculate average rating\n    const totalRating = approvedReviews.reduce((sum, review)=>sum + review.rating, 0);\n    const averageRating = totalRating / approvedReviews.length;\n    // Update service document\n    const serviceRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\", serviceId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(serviceRef, {\n        averageRating,\n        reviewCount: approvedReviews.length\n    });\n};\n// Add this new function to create a service\nconst createService = async (serviceData, imageFile)=>{\n    // Prepare service data with default values\n    const newService = {\n        ...serviceData,\n        averageRating: 0,\n        reviewCount: 0,\n        pending: true,\n        createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n    };\n    // Upload image if provided\n    if (imageFile) {\n        const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_firebase__WEBPACK_IMPORTED_MODULE_2__.storage, \"services/\".concat((0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()));\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(imageRef, imageFile);\n        newService.imageUrl = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(imageRef);\n    }\n    // Add service to Firestore\n    const serviceRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\"), newService);\n    return serviceRef.id;\n};\n// Add this new function to search services\nconst searchServices = async (searchTerm)=>{\n    if (!searchTerm.trim()) {\n        return getServices(); // Return all approved services if search term is empty\n    }\n    const searchTermLower = searchTerm.toLowerCase();\n    // Get all approved services first\n    const servicesCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\");\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(servicesCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", false));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    // Filter the services client-side based ONLY on the service name\n    const filteredServices = snapshot.docs.map((doc)=>({\n            id: doc.id,\n            ...doc.data()\n        })).filter((service)=>service.name.toLowerCase().includes(searchTermLower));\n    return filteredServices;\n};\n// Get pending services (for admin)\nconst getPendingServices = async ()=>{\n    const servicesCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\");\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(servicesCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", true), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n// Approve or reject a pending service\nconst updateServiceStatus = async (serviceId, approve)=>{\n    const serviceRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\", serviceId);\n    const serviceSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(serviceRef);\n    if (!serviceSnap.exists()) {\n        throw new Error(\"Service does not exist\");\n    }\n    if (approve) {\n        // Approve the service\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(serviceRef, {\n            pending: false\n        });\n    } else {\n        // Delete the service if not approved\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(serviceRef);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/firestore.ts\n"));

/***/ })

});