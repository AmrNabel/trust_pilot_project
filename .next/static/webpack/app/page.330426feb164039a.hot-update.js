"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/firestore.ts":
/*!**************************!*\
  !*** ./lib/firestore.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReview: function() { return /* binding */ createReview; },\n/* harmony export */   createService: function() { return /* binding */ createService; },\n/* harmony export */   getPendingReviews: function() { return /* binding */ getPendingReviews; },\n/* harmony export */   getPendingServices: function() { return /* binding */ getPendingServices; },\n/* harmony export */   getReviewsByServiceId: function() { return /* binding */ getReviewsByServiceId; },\n/* harmony export */   getServiceById: function() { return /* binding */ getServiceById; },\n/* harmony export */   getServices: function() { return /* binding */ getServices; },\n/* harmony export */   searchServices: function() { return /* binding */ searchServices; },\n/* harmony export */   updateReviewStatus: function() { return /* binding */ updateReviewStatus; },\n/* harmony export */   updateServiceRating: function() { return /* binding */ updateServiceRating; }\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/storage */ \"(app-pages-browser)/./node_modules/firebase/storage/dist/esm/index.esm.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./lib/firebase.ts\");\n\n\n\n\n// Get all services\nconst getServices = async function() {\n    let includePending = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    const servicesCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\");\n    const constraints = [];\n    if (!includePending) {\n        // Only get approved services by default\n        constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", false));\n    }\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(servicesCollection, ...constraints, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"name\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n// Get service by ID\nconst getServiceById = async (id)=>{\n    const docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\", id);\n    const docSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(docRef);\n    if (docSnap.exists()) {\n        return {\n            id: docSnap.id,\n            ...docSnap.data()\n        };\n    }\n    return null;\n};\n// Get reviews for a service\nconst getReviewsByServiceId = async function(serviceId) {\n    let showPending = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const reviewsCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\");\n    // Only show approved reviews unless showPending is true\n    const constraints = [\n        (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"serviceId\", \"==\", serviceId)\n    ];\n    if (!showPending) {\n        constraints.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", false));\n    }\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(reviewsCollection, ...constraints, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n// Get all pending reviews (for admin)\nconst getPendingReviews = async ()=>{\n    const reviewsCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\");\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(reviewsCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", true), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n// Create a new review\nconst createReview = async (review, imageFile)=>{\n    // Prepare review data\n    const reviewData = {\n        ...review,\n        pending: true,\n        createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n    };\n    // Upload image if provided\n    if (imageFile) {\n        const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_firebase__WEBPACK_IMPORTED_MODULE_2__.storage, \"reviews/\".concat((0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()));\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(imageRef, imageFile);\n        reviewData.imageUrl = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(imageRef);\n    }\n    // Add review to Firestore\n    const reviewRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\"), reviewData);\n    return reviewRef.id;\n};\n// Approve or reject a review\nconst updateReviewStatus = async (reviewId, approve)=>{\n    const reviewRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"reviews\", reviewId);\n    const reviewSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(reviewRef);\n    if (!reviewSnap.exists()) {\n        throw new Error(\"Review does not exist\");\n    }\n    const review = reviewSnap.data();\n    if (approve) {\n        // Approve the review\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(reviewRef, {\n            pending: false\n        });\n        // Update service rating\n        await updateServiceRating(review.serviceId);\n    } else {\n        // Delete the review if not approved\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(reviewRef);\n    }\n};\n// Update service rating based on approved reviews\nconst updateServiceRating = async (serviceId)=>{\n    const approvedReviews = await getReviewsByServiceId(serviceId);\n    if (approvedReviews.length === 0) return;\n    // Calculate average rating\n    const totalRating = approvedReviews.reduce((sum, review)=>sum + review.rating, 0);\n    const averageRating = totalRating / approvedReviews.length;\n    // Update service document\n    const serviceRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\", serviceId);\n    await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(serviceRef, {\n        averageRating,\n        reviewCount: approvedReviews.length\n    });\n};\n// Add this new function to create a service\nconst createService = async (serviceData, imageFile)=>{\n    // Prepare service data with default values\n    const newService = {\n        ...serviceData,\n        averageRating: 0,\n        reviewCount: 0,\n        createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n    };\n    // Upload image if provided\n    if (imageFile) {\n        const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_firebase__WEBPACK_IMPORTED_MODULE_2__.storage, \"services/\".concat((0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()));\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(imageRef, imageFile);\n        newService.imageUrl = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(imageRef);\n    }\n    // Add service to Firestore\n    const serviceRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\"), newService);\n    return serviceRef.id;\n};\n// Add this new function to search services\nconst searchServices = async (searchTerm)=>{\n    if (!searchTerm.trim()) {\n        return getServices(); // Return all services if search term is empty\n    }\n    const searchTermLower = searchTerm.toLowerCase();\n    // Get all services first (could be optimized with Firestore indexing for larger applications)\n    const servicesCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\");\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(servicesCollection);\n    // Filter the services client-side based ONLY on the service name\n    const filteredServices = snapshot.docs.map((doc)=>({\n            id: doc.id,\n            ...doc.data()\n        })).filter((service)=>service.name.toLowerCase().includes(searchTermLower));\n    return filteredServices;\n};\n// Get pending services (for admin)\nconst getPendingServices = async ()=>{\n    const servicesCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, \"services\");\n    const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(servicesCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)(\"pending\", \"==\", true), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)(\"createdAt\", \"desc\"));\n    const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n    return snapshot.docs.map((doc)=>{\n        return {\n            id: doc.id,\n            ...doc.data()\n        };\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9maXJlc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQjRCO0FBQ3dDO0FBQ2hDO0FBQ0s7QUE4QnpDLG1CQUFtQjtBQUNaLE1BQU1rQixjQUFjO1FBQ3pCQyxrRkFBMEI7SUFFMUIsTUFBTUMscUJBQXFCcEIsOERBQVVBLENBQUNnQix5Q0FBRUEsRUFBRTtJQUMxQyxNQUFNSyxjQUFjLEVBQUU7SUFFdEIsSUFBSSxDQUFDRixnQkFBZ0I7UUFDbkIsd0NBQXdDO1FBQ3hDRSxZQUFZQyxJQUFJLENBQUNmLHlEQUFLQSxDQUFDLFdBQVcsTUFBTTtJQUMxQztJQUVBLE1BQU1nQixJQUFJakIseURBQUtBLENBQUNjLHVCQUF1QkMsYUFBYWIsMkRBQU9BLENBQUM7SUFDNUQsTUFBTWdCLFdBQVcsTUFBTXJCLDJEQUFPQSxDQUFDb0I7SUFFL0IsT0FBT0MsU0FBU0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQ3pCO1FBQ3hCLE9BQU87WUFBRTBCLElBQUkxQixJQUFJMEIsRUFBRTtZQUFFLEdBQUcxQixJQUFJMkIsSUFBSSxFQUFFO1FBQUM7SUFDckM7QUFDRixFQUFFO0FBRUYsb0JBQW9CO0FBQ2IsTUFBTUMsaUJBQWlCLE9BQU9GO0lBQ25DLE1BQU1HLFNBQVM3Qix1REFBR0EsQ0FBQ2UseUNBQUVBLEVBQUUsWUFBWVc7SUFDbkMsTUFBTUksVUFBVSxNQUFNN0IsMERBQU1BLENBQUM0QjtJQUU3QixJQUFJQyxRQUFRQyxNQUFNLElBQUk7UUFDcEIsT0FBTztZQUFFTCxJQUFJSSxRQUFRSixFQUFFO1lBQUUsR0FBR0ksUUFBUUgsSUFBSSxFQUFFO1FBQUM7SUFDN0M7SUFFQSxPQUFPO0FBQ1QsRUFBRTtBQUVGLDRCQUE0QjtBQUNyQixNQUFNSyx3QkFBd0IsZUFDbkNDO1FBQ0FDLCtFQUF1QjtJQUV2QixNQUFNQyxvQkFBb0JwQyw4REFBVUEsQ0FBQ2dCLHlDQUFFQSxFQUFFO0lBRXpDLHdEQUF3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MkIsSUFBSSxFQUFFO1FBQUMsSUFDMUMyQyxNQUFNLENBQUMsQ0FBQ0MsVUFBWUEsUUFBUUMsSUFBSSxDQUFDSixXQUFXLEdBQUdLLFFBQVEsQ0FBQ047SUFFM0QsT0FBT0U7QUFDVCxFQUFFO0FBRUYsbUNBQW1DO0FBQzVCLE1BQU1LLHFCQUFxQjtJQUNoQyxNQUFNdkQscUJBQXFCcEIsOERBQVVBLENBQUNnQix5Q0FBRUEsRUFBRTtJQUMxQyxNQUFNTyxJQUFJakIseURBQUtBLENBQ2JjLG9CQUNBYix5REFBS0EsQ0FBQyxXQUFXLE1BQU0sT0FDdkJDLDJEQUFPQSxDQUFDLGFBQWE7SUFHdkIsTUFBTWdCLFdBQVcsTUFBTXJCLDJEQUFPQSxDQUFDb0I7SUFFL0IsT0FBT0MsU0FBU0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQ3pCO1FBQ3hCLE9BQU87WUFBRTBCLElBQUkxQixJQUFJMEIsRUFBRTtZQUFFLEdBQUcxQixJQUFJMkIsSUFBSSxFQUFFO1FBQUM7SUFDckM7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9maXJlc3RvcmUudHM/YjQ2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjb2xsZWN0aW9uLFxuICBkb2MsXG4gIGdldERvYyxcbiAgZ2V0RG9jcyxcbiAgc2V0RG9jLFxuICB1cGRhdGVEb2MsXG4gIGRlbGV0ZURvYyxcbiAgcXVlcnksXG4gIHdoZXJlLFxuICBvcmRlckJ5LFxuICBsaW1pdCxcbiAgc2VydmVyVGltZXN0YW1wLFxuICBUaW1lc3RhbXAsXG4gIGFkZERvYyxcbiAgRG9jdW1lbnRSZWZlcmVuY2UsXG59IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XG5pbXBvcnQgeyByZWYsIHVwbG9hZEJ5dGVzLCBnZXREb3dubG9hZFVSTCB9IGZyb20gJ2ZpcmViYXNlL3N0b3JhZ2UnO1xuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCc7XG5pbXBvcnQgeyBkYiwgc3RvcmFnZSB9IGZyb20gJy4vZmlyZWJhc2UnO1xuXG4vLyBTZXJ2aWNlIGludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBTZXJ2aWNlIHtcbiAgaWQ/OiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgY2F0ZWdvcnk6IHN0cmluZztcbiAgbG9jYXRpb246IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgaW1hZ2VVcmw/OiBzdHJpbmc7XG4gIGF2ZXJhZ2VSYXRpbmc/OiBudW1iZXI7XG4gIHJldmlld0NvdW50PzogbnVtYmVyO1xuICBjcmVhdGVkQXQ/OiBUaW1lc3RhbXA7XG4gIHBlbmRpbmc/OiBib29sZWFuO1xuICB1c2VySWQ/OiBzdHJpbmc7XG59XG5cbi8vIFJldmlldyBpbnRlcmZhY2VcbmV4cG9ydCBpbnRlcmZhY2UgUmV2aWV3IHtcbiAgaWQ/OiBzdHJpbmc7XG4gIHNlcnZpY2VJZDogc3RyaW5nO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdXNlckVtYWlsOiBzdHJpbmc7XG4gIHJhdGluZzogbnVtYmVyO1xuICBjb21tZW50OiBzdHJpbmc7XG4gIGltYWdlVXJsPzogc3RyaW5nO1xuICBwZW5kaW5nOiBib29sZWFuO1xuICBjcmVhdGVkQXQ/OiBUaW1lc3RhbXA7XG59XG5cbi8vIEdldCBhbGwgc2VydmljZXNcbmV4cG9ydCBjb25zdCBnZXRTZXJ2aWNlcyA9IGFzeW5jIChcbiAgaW5jbHVkZVBlbmRpbmc6IGJvb2xlYW4gPSBmYWxzZVxuKTogUHJvbWlzZTxTZXJ2aWNlW10+ID0+IHtcbiAgY29uc3Qgc2VydmljZXNDb2xsZWN0aW9uID0gY29sbGVjdGlvbihkYiwgJ3NlcnZpY2VzJyk7XG4gIGNvbnN0IGNvbnN0cmFpbnRzID0gW107XG5cbiAgaWYgKCFpbmNsdWRlUGVuZGluZykge1xuICAgIC8vIE9ubHkgZ2V0IGFwcHJvdmVkIHNlcnZpY2VzIGJ5IGRlZmF1bHRcbiAgICBjb25zdHJhaW50cy5wdXNoKHdoZXJlKCdwZW5kaW5nJywgJz09JywgZmFsc2UpKTtcbiAgfVxuXG4gIGNvbnN0IHEgPSBxdWVyeShzZXJ2aWNlc0NvbGxlY3Rpb24sIC4uLmNvbnN0cmFpbnRzLCBvcmRlckJ5KCduYW1lJykpO1xuICBjb25zdCBzbmFwc2hvdCA9IGF3YWl0IGdldERvY3MocSk7XG5cbiAgcmV0dXJuIHNuYXBzaG90LmRvY3MubWFwKChkb2MpID0+IHtcbiAgICByZXR1cm4geyBpZDogZG9jLmlkLCAuLi5kb2MuZGF0YSgpIH0gYXMgU2VydmljZTtcbiAgfSk7XG59O1xuXG4vLyBHZXQgc2VydmljZSBieSBJRFxuZXhwb3J0IGNvbnN0IGdldFNlcnZpY2VCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFNlcnZpY2UgfCBudWxsPiA9PiB7XG4gIGNvbnN0IGRvY1JlZiA9IGRvYyhkYiwgJ3NlcnZpY2VzJywgaWQpO1xuICBjb25zdCBkb2NTbmFwID0gYXdhaXQgZ2V0RG9jKGRvY1JlZik7XG5cbiAgaWYgKGRvY1NuYXAuZXhpc3RzKCkpIHtcbiAgICByZXR1cm4geyBpZDogZG9jU25hcC5pZCwgLi4uZG9jU25hcC5kYXRhKCkgfSBhcyBTZXJ2aWNlO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG4vLyBHZXQgcmV2aWV3cyBmb3IgYSBzZXJ2aWNlXG5leHBvcnQgY29uc3QgZ2V0UmV2aWV3c0J5U2VydmljZUlkID0gYXN5bmMgKFxuICBzZXJ2aWNlSWQ6IHN0cmluZyxcbiAgc2hvd1BlbmRpbmc6IGJvb2xlYW4gPSBmYWxzZVxuKTogUHJvbWlzZTxSZXZpZXdbXT4gPT4ge1xuICBjb25zdCByZXZpZXdzQ29sbGVjdGlvbiA9IGNvbGxlY3Rpb24oZGIsICdyZXZpZXdzJyk7XG5cbiAgLy8gT25seSBzaG93IGFwcHJvdmVkIHJldmlld3MgdW5sZXNzIHNob3dQZW5kaW5nIGlzIHRydWVcbiAgY29uc3QgY29uc3RyYWludHMgPSBbd2hlcmUoJ3NlcnZpY2VJZCcsICc9PScsIHNlcnZpY2VJZCldO1xuICBpZiAoIXNob3dQZW5kaW5nKSB7XG4gICAgY29uc3RyYWludHMucHVzaCh3aGVyZSgncGVuZGluZycsICc9PScsIGZhbHNlKSk7XG4gIH1cblxuICBjb25zdCBxID0gcXVlcnkoXG4gICAgcmV2aWV3c0NvbGxlY3Rpb24sXG4gICAgLi4uY29uc3RyYWludHMsXG4gICAgb3JkZXJCeSgnY3JlYXRlZEF0JywgJ2Rlc2MnKVxuICApO1xuXG4gIGNvbnN0IHNuYXBzaG90ID0gYXdhaXQgZ2V0RG9jcyhxKTtcblxuICByZXR1cm4gc25hcHNob3QuZG9jcy5tYXAoKGRvYykgPT4ge1xuICAgIHJldHVybiB7IGlkOiBkb2MuaWQsIC4uLmRvYy5kYXRhKCkgfSBhcyBSZXZpZXc7XG4gIH0pO1xufTtcblxuLy8gR2V0IGFsbCBwZW5kaW5nIHJldmlld3MgKGZvciBhZG1pbilcbmV4cG9ydCBjb25zdCBnZXRQZW5kaW5nUmV2aWV3cyA9IGFzeW5jICgpOiBQcm9taXNlPFJldmlld1tdPiA9PiB7XG4gIGNvbnN0IHJldmlld3NDb2xsZWN0aW9uID0gY29sbGVjdGlvbihkYiwgJ3Jldmlld3MnKTtcbiAgY29uc3QgcSA9IHF1ZXJ5KFxuICAgIHJldmlld3NDb2xsZWN0aW9uLFxuICAgIHdoZXJlKCdwZW5kaW5nJywgJz09JywgdHJ1ZSksXG4gICAgb3JkZXJCeSgnY3JlYXRlZEF0JywgJ2Rlc2MnKVxuICApO1xuXG4gIGNvbnN0IHNuYXBzaG90ID0gYXdhaXQgZ2V0RG9jcyhxKTtcblxuICByZXR1cm4gc25hcHNob3QuZG9jcy5tYXAoKGRvYykgPT4ge1xuICAgIHJldHVybiB7IGlkOiBkb2MuaWQsIC4uLmRvYy5kYXRhKCkgfSBhcyBSZXZpZXc7XG4gIH0pO1xufTtcblxuLy8gQ3JlYXRlIGEgbmV3IHJldmlld1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVJldmlldyA9IGFzeW5jIChcbiAgcmV2aWV3OiBPbWl0PFJldmlldywgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3BlbmRpbmcnPixcbiAgaW1hZ2VGaWxlPzogRmlsZVxuKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgLy8gUHJlcGFyZSByZXZpZXcgZGF0YVxuICBjb25zdCByZXZpZXdEYXRhOiBPbWl0PFJldmlldywgJ2lkJz4gPSB7XG4gICAgLi4ucmV2aWV3LFxuICAgIHBlbmRpbmc6IHRydWUsIC8vIEFsbCByZXZpZXdzIHN0YXJ0IGFzIHBlbmRpbmdcbiAgICBjcmVhdGVkQXQ6IHNlcnZlclRpbWVzdGFtcCgpIGFzIFRpbWVzdGFtcCxcbiAgfTtcblxuICAvLyBVcGxvYWQgaW1hZ2UgaWYgcHJvdmlkZWRcbiAgaWYgKGltYWdlRmlsZSkge1xuICAgIGNvbnN0IGltYWdlUmVmID0gcmVmKHN0b3JhZ2UsIGByZXZpZXdzLyR7dXVpZHY0KCl9YCk7XG4gICAgYXdhaXQgdXBsb2FkQnl0ZXMoaW1hZ2VSZWYsIGltYWdlRmlsZSk7XG4gICAgcmV2aWV3RGF0YS5pbWFnZVVybCA9IGF3YWl0IGdldERvd25sb2FkVVJMKGltYWdlUmVmKTtcbiAgfVxuXG4gIC8vIEFkZCByZXZpZXcgdG8gRmlyZXN0b3JlXG4gIGNvbnN0IHJldmlld1JlZiA9IGF3YWl0IGFkZERvYyhjb2xsZWN0aW9uKGRiLCAncmV2aWV3cycpLCByZXZpZXdEYXRhKTtcblxuICByZXR1cm4gcmV2aWV3UmVmLmlkO1xufTtcblxuLy8gQXBwcm92ZSBvciByZWplY3QgYSByZXZpZXdcbmV4cG9ydCBjb25zdCB1cGRhdGVSZXZpZXdTdGF0dXMgPSBhc3luYyAoXG4gIHJldmlld0lkOiBzdHJpbmcsXG4gIGFwcHJvdmU6IGJvb2xlYW5cbik6IFByb21pc2U8dm9pZD4gPT4ge1xuICBjb25zdCByZXZpZXdSZWYgPSBkb2MoZGIsICdyZXZpZXdzJywgcmV2aWV3SWQpO1xuICBjb25zdCByZXZpZXdTbmFwID0gYXdhaXQgZ2V0RG9jKHJldmlld1JlZik7XG5cbiAgaWYgKCFyZXZpZXdTbmFwLmV4aXN0cygpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdSZXZpZXcgZG9lcyBub3QgZXhpc3QnKTtcbiAgfVxuXG4gIGNvbnN0IHJldmlldyA9IHJldmlld1NuYXAuZGF0YSgpIGFzIFJldmlldztcblxuICBpZiAoYXBwcm92ZSkge1xuICAgIC8vIEFwcHJvdmUgdGhlIHJldmlld1xuICAgIGF3YWl0IHVwZGF0ZURvYyhyZXZpZXdSZWYsIHsgcGVuZGluZzogZmFsc2UgfSk7XG5cbiAgICAvLyBVcGRhdGUgc2VydmljZSByYXRpbmdcbiAgICBhd2FpdCB1cGRhdGVTZXJ2aWNlUmF0aW5nKHJldmlldy5zZXJ2aWNlSWQpO1xuICB9IGVsc2Uge1xuICAgIC8vIERlbGV0ZSB0aGUgcmV2aWV3IGlmIG5vdCBhcHByb3ZlZFxuICAgIGF3YWl0IGRlbGV0ZURvYyhyZXZpZXdSZWYpO1xuICB9XG59O1xuXG4vLyBVcGRhdGUgc2VydmljZSByYXRpbmcgYmFzZWQgb24gYXBwcm92ZWQgcmV2aWV3c1xuZXhwb3J0IGNvbnN0IHVwZGF0ZVNlcnZpY2VSYXRpbmcgPSBhc3luYyAoc2VydmljZUlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgY29uc3QgYXBwcm92ZWRSZXZpZXdzID0gYXdhaXQgZ2V0UmV2aWV3c0J5U2VydmljZUlkKHNlcnZpY2VJZCk7XG5cbiAgaWYgKGFwcHJvdmVkUmV2aWV3cy5sZW5ndGggPT09IDApIHJldHVybjtcblxuICAvLyBDYWxjdWxhdGUgYXZlcmFnZSByYXRpbmdcbiAgY29uc3QgdG90YWxSYXRpbmcgPSBhcHByb3ZlZFJldmlld3MucmVkdWNlKFxuICAgIChzdW0sIHJldmlldykgPT4gc3VtICsgcmV2aWV3LnJhdGluZyxcbiAgICAwXG4gICk7XG4gIGNvbnN0IGF2ZXJhZ2VSYXRpbmcgPSB0b3RhbFJhdGluZyAvIGFwcHJvdmVkUmV2aWV3cy5sZW5ndGg7XG5cbiAgLy8gVXBkYXRlIHNlcnZpY2UgZG9jdW1lbnRcbiAgY29uc3Qgc2VydmljZVJlZiA9IGRvYyhkYiwgJ3NlcnZpY2VzJywgc2VydmljZUlkKTtcbiAgYXdhaXQgdXBkYXRlRG9jKHNlcnZpY2VSZWYsIHtcbiAgICBhdmVyYWdlUmF0aW5nLFxuICAgIHJldmlld0NvdW50OiBhcHByb3ZlZFJldmlld3MubGVuZ3RoLFxuICB9KTtcbn07XG5cbi8vIEFkZCB0aGlzIG5ldyBmdW5jdGlvbiB0byBjcmVhdGUgYSBzZXJ2aWNlXG5leHBvcnQgY29uc3QgY3JlYXRlU2VydmljZSA9IGFzeW5jIChcbiAgc2VydmljZURhdGE6IE9taXQ8XG4gICAgU2VydmljZSxcbiAgICAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAnYXZlcmFnZVJhdGluZycgfCAncmV2aWV3Q291bnQnXG4gID4sXG4gIGltYWdlRmlsZT86IEZpbGVcbik6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gIC8vIFByZXBhcmUgc2VydmljZSBkYXRhIHdpdGggZGVmYXVsdCB2YWx1ZXNcbiAgY29uc3QgbmV3U2VydmljZTogT21pdDxTZXJ2aWNlLCAnaWQnPiA9IHtcbiAgICAuLi5zZXJ2aWNlRGF0YSxcbiAgICBhdmVyYWdlUmF0aW5nOiAwLFxuICAgIHJldmlld0NvdW50OiAwLFxuICAgIGNyZWF0ZWRBdDogc2VydmVyVGltZXN0YW1wKCkgYXMgVGltZXN0YW1wLFxuICB9O1xuXG4gIC8vIFVwbG9hZCBpbWFnZSBpZiBwcm92aWRlZFxuICBpZiAoaW1hZ2VGaWxlKSB7XG4gICAgY29uc3QgaW1hZ2VSZWYgPSByZWYoc3RvcmFnZSwgYHNlcnZpY2VzLyR7dXVpZHY0KCl9YCk7XG4gICAgYXdhaXQgdXBsb2FkQnl0ZXMoaW1hZ2VSZWYsIGltYWdlRmlsZSk7XG4gICAgbmV3U2VydmljZS5pbWFnZVVybCA9IGF3YWl0IGdldERvd25sb2FkVVJMKGltYWdlUmVmKTtcbiAgfVxuXG4gIC8vIEFkZCBzZXJ2aWNlIHRvIEZpcmVzdG9yZVxuICBjb25zdCBzZXJ2aWNlUmVmID0gYXdhaXQgYWRkRG9jKGNvbGxlY3Rpb24oZGIsICdzZXJ2aWNlcycpLCBuZXdTZXJ2aWNlKTtcblxuICByZXR1cm4gc2VydmljZVJlZi5pZDtcbn07XG5cbi8vIEFkZCB0aGlzIG5ldyBmdW5jdGlvbiB0byBzZWFyY2ggc2VydmljZXNcbmV4cG9ydCBjb25zdCBzZWFyY2hTZXJ2aWNlcyA9IGFzeW5jIChcbiAgc2VhcmNoVGVybTogc3RyaW5nXG4pOiBQcm9taXNlPFNlcnZpY2VbXT4gPT4ge1xuICBpZiAoIXNlYXJjaFRlcm0udHJpbSgpKSB7XG4gICAgcmV0dXJuIGdldFNlcnZpY2VzKCk7IC8vIFJldHVybiBhbGwgc2VydmljZXMgaWYgc2VhcmNoIHRlcm0gaXMgZW1wdHlcbiAgfVxuXG4gIGNvbnN0IHNlYXJjaFRlcm1Mb3dlciA9IHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKTtcblxuICAvLyBHZXQgYWxsIHNlcnZpY2VzIGZpcnN0IChjb3VsZCBiZSBvcHRpbWl6ZWQgd2l0aCBGaXJlc3RvcmUgaW5kZXhpbmcgZm9yIGxhcmdlciBhcHBsaWNhdGlvbnMpXG4gIGNvbnN0IHNlcnZpY2VzQ29sbGVjdGlvbiA9IGNvbGxlY3Rpb24oZGIsICdzZXJ2aWNlcycpO1xuICBjb25zdCBzbmFwc2hvdCA9IGF3YWl0IGdldERvY3Moc2VydmljZXNDb2xsZWN0aW9uKTtcblxuICAvLyBGaWx0ZXIgdGhlIHNlcnZpY2VzIGNsaWVudC1zaWRlIGJhc2VkIE9OTFkgb24gdGhlIHNlcnZpY2UgbmFtZVxuICBjb25zdCBmaWx0ZXJlZFNlcnZpY2VzID0gc25hcHNob3QuZG9jc1xuICAgIC5tYXAoKGRvYykgPT4gKHsgaWQ6IGRvYy5pZCwgLi4uZG9jLmRhdGEoKSB9IGFzIFNlcnZpY2UpKVxuICAgIC5maWx0ZXIoKHNlcnZpY2UpID0+IHNlcnZpY2UubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRlcm1Mb3dlcikpO1xuXG4gIHJldHVybiBmaWx0ZXJlZFNlcnZpY2VzO1xufTtcblxuLy8gR2V0IHBlbmRpbmcgc2VydmljZXMgKGZvciBhZG1pbilcbmV4cG9ydCBjb25zdCBnZXRQZW5kaW5nU2VydmljZXMgPSBhc3luYyAoKTogUHJvbWlzZTxTZXJ2aWNlW10+ID0+IHtcbiAgY29uc3Qgc2VydmljZXNDb2xsZWN0aW9uID0gY29sbGVjdGlvbihkYiwgJ3NlcnZpY2VzJyk7XG4gIGNvbnN0IHEgPSBxdWVyeShcbiAgICBzZXJ2aWNlc0NvbGxlY3Rpb24sXG4gICAgd2hlcmUoJ3BlbmRpbmcnLCAnPT0nLCB0cnVlKSxcbiAgICBvcmRlckJ5KCdjcmVhdGVkQXQnLCAnZGVzYycpXG4gICk7XG5cbiAgY29uc3Qgc25hcHNob3QgPSBhd2FpdCBnZXREb2NzKHEpO1xuXG4gIHJldHVybiBzbmFwc2hvdC5kb2NzLm1hcCgoZG9jKSA9PiB7XG4gICAgcmV0dXJuIHsgaWQ6IGRvYy5pZCwgLi4uZG9jLmRhdGEoKSB9IGFzIFNlcnZpY2U7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6WyJjb2xsZWN0aW9uIiwiZG9jIiwiZ2V0RG9jIiwiZ2V0RG9jcyIsInVwZGF0ZURvYyIsImRlbGV0ZURvYyIsInF1ZXJ5Iiwid2hlcmUiLCJvcmRlckJ5Iiwic2VydmVyVGltZXN0YW1wIiwiYWRkRG9jIiwicmVmIiwidXBsb2FkQnl0ZXMiLCJnZXREb3dubG9hZFVSTCIsInY0IiwidXVpZHY0IiwiZGIiLCJzdG9yYWdlIiwiZ2V0U2VydmljZXMiLCJpbmNsdWRlUGVuZGluZyIsInNlcnZpY2VzQ29sbGVjdGlvbiIsImNvbnN0cmFpbnRzIiwicHVzaCIsInEiLCJzbmFwc2hvdCIsImRvY3MiLCJtYXAiLCJpZCIsImRhdGEiLCJnZXRTZXJ2aWNlQnlJZCIsImRvY1JlZiIsImRvY1NuYXAiLCJleGlzdHMiLCJnZXRSZXZpZXdzQnlTZXJ2aWNlSWQiLCJzZXJ2aWNlSWQiLCJzaG93UGVuZGluZyIsInJldmlld3NDb2xsZWN0aW9uIiwiZ2V0UGVuZGluZ1Jldmlld3MiLCJjcmVhdGVSZXZpZXciLCJyZXZpZXciLCJpbWFnZUZpbGUiLCJyZXZpZXdEYXRhIiwicGVuZGluZyIsImNyZWF0ZWRBdCIsImltYWdlUmVmIiwiaW1hZ2VVcmwiLCJyZXZpZXdSZWYiLCJ1cGRhdGVSZXZpZXdTdGF0dXMiLCJyZXZpZXdJZCIsImFwcHJvdmUiLCJyZXZpZXdTbmFwIiwiRXJyb3IiLCJ1cGRhdGVTZXJ2aWNlUmF0aW5nIiwiYXBwcm92ZWRSZXZpZXdzIiwibGVuZ3RoIiwidG90YWxSYXRpbmciLCJyZWR1Y2UiLCJzdW0iLCJyYXRpbmciLCJhdmVyYWdlUmF0aW5nIiwic2VydmljZVJlZiIsInJldmlld0NvdW50IiwiY3JlYXRlU2VydmljZSIsInNlcnZpY2VEYXRhIiwibmV3U2VydmljZSIsInNlYXJjaFNlcnZpY2VzIiwic2VhcmNoVGVybSIsInRyaW0iLCJzZWFyY2hUZXJtTG93ZXIiLCJ0b0xvd2VyQ2FzZSIsImZpbHRlcmVkU2VydmljZXMiLCJmaWx0ZXIiLCJzZXJ2aWNlIiwibmFtZSIsImluY2x1ZGVzIiwiZ2V0UGVuZGluZ1NlcnZpY2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/firestore.ts\n"));

/***/ })

});